@using BlazorAppExcel.Components.Cells
@using BlazorAppExcel.Interfaces
@using BlazorAppExcel.Models
@using BlazorAppExcel.Share.Enums
@using BlazorAppExcel.Share.Models
@using System.Linq;

@inject ISessionSingletonService session
@inject IExcelService excel;

@page "/design/columns/{IdTableSelected?}"

<MudGrid>
    <MudItem xs="12">
        <MudSelect T="Parts" Label="Parts" ToStringFunc="@converter" HelperText="Pick the Parts" @bind-Value="@options">
            @foreach (var part in parts)
            {
                <MudSelectItem Value="@part"></MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="12">
        <br /><br />
        Selected parts: @options;
    </MudItem>
</MudGrid>

@code {

    IEnumerable<Parts> parts = new List<Parts>()
    {
        new Parts() {PartID = 1, PartValue = "Audi"},
        new Parts() {PartID = 2, PartValue = "BMW"},
        new Parts() {PartID = 3, PartValue = "Chevrolet"},
        new Parts() {PartID = 4, PartValue = "Ferrari"},
        new Parts() {PartID = 5, PartValue = "Porsche"},
        new Parts() {PartID = 6, PartValue = "Renault"}
    };

    public Parts options { get; set; }

    public class Parts
    {
        public int PartID { get; set; }
        public string PartValue { get; set; }
        public override bool Equals(object o)
        {
            var other = o as Parts;
            return other?.PartID == PartID;
        }
        public override int GetHashCode() => PartID.GetHashCode();
        public override string ToString()
        {
            return PartValue;
        }
    }

    Func<Parts, string> converter = p => p?.PartValue;
} 