
@using BlazorAppExcel.Models;
@using BlazorAppExcel.Share.Enums
@using BlazorAppExcel.Share.Models
@* @inject ISnackbar Snackbar *@
@using BlazorAppExcel.Components.Cells

<div class="d-flex flex-column mb-3">
  
        @foreach (var item in Columns)
        {
        var typeSelected = item.Type.ToString();
            <div class="p-2">
            <CellSelectElement Name="@item.Name" Value="@typeSelected" Values="@Items" OnChildParameterChanged="@((string e)=>UpdateChildParameter(e, item))"></CellSelectElement>
            </div>

        }
    
</div>

   <div class="float-end">
        <Button Color="ButtonColor.Secondary" @onclick="Cancel">Close</Button>
        <Button Color="ButtonColor.Primary" @onclick="SaveItem">Save changes</Button>
   </div>




@code {

    private Modal modal = default!;
    IDictionary<string,string> Items = ExcelCellTypeUtil.GetEnumDictionary();

    [Parameter] public IList<Column> Columns { get; set; }
    [Parameter] public Action<IList<Column>> Save { get; set; }
    [Parameter] public Action Cancel { get; set; }

    // [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void UpdateChildParameter(string value, Column column)
    {
        column.IdType = Convert.ToInt16(value);
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        // this.StateHasChanged();
    }


    private void SaveItem()
    {
        Save(Columns);
    }

}
