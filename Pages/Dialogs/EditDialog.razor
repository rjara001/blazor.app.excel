
@using BlazorAppExcel.Models;
@using BlazorAppExcel.Share.Models
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1"/>
            Edit Item
        </MudText>
    </TitleContent>
    <DialogContent>
        @foreach (var (item, index) in RowExcel.Cells.Select((item, index) => (item, index))) //  (CellExcel item in RowExcel.Cells) //foreach (var (item, index) in items.Select((item, index) => (item, index)))
        {
            MudTextField<string> mudTextField = this.Values.FirstOrDefault(_ => _.Key == item.Name).Value;

            if (mudTextField==null)
            {
                mudTextField = new MudTextField<string>();
                mudTextField.Tag = item;

                Values.Add(item.Name, mudTextField);
            }

            <MudTextField T="string" @ref="Values[item.Name]" Value="@item.Value" Label="@item.Name" />
        }

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="SaveItem">Save</MudButton>
        <MudButton OnClick="Cancel">Cancel</MudButton>

    </DialogActions>
</MudDialog>

@code {
    [Parameter] public RowCellExcel RowExcel { get; set; }
    [Parameter]
    public Action<RowCellExcel> Save { get; set; }

    public IDictionary<string, MudTextField<string>> Values = new Dictionary<string, MudTextField<string>>();

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void SaveItem()
    {
        foreach (var item in this.Values)
        {
            if (item.Value != null)
            {
                var valueItem = this.RowExcel.Cells.FirstOrDefault(_ => _.Name == item.Key);
                if (valueItem != null)
                    valueItem.Value = item.Value.Value;
            }

        }

        this.Save(RowExcel);
    }
}
