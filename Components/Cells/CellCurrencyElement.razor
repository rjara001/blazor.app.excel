@using System.Text.RegularExpressions
@using static BlazorAppExcel.Components.CellEdit

@* <MudTextField T="string" @bind-Value="Value" Label="@Name" OnError="HandleError" /> *@
<FluentTextField @bind-Value=Value AriaLabel="No label"></FluentTextField>

@code {

    private string _value;

    [Parameter]
    public EventCallback<string> OnChildParameterChanged { get; set; }

    [Parameter] public string Value {
        get
        {
            return this._value;
        }
        set
        {
            if (_value == value) return;
            value = formatCurrency(value);
            this._value = value;
            OnChildParameterChanged.InvokeAsync(value);

        } 
    }

    [Parameter] public string Name { get; set; }

    private void HandleError(string errorMessage) {
        Console.WriteLine($"Mask error: {errorMessage}");
    }

    private string formatCurrency(string num)
    {
        num = Util.ExtractNumberFromString(num, Share.Enums.ExcelCellType.Currency);
        Double value;
        if (Double.TryParse(num, out value))
            return String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C2}", value);
        else
            return String.Empty;
    }
}
