@using System.Text.RegularExpressions
@using static BlazorAppExcel.Components.CellEdit


<div class="form-floating mb-3">
    @* <InputText  @bind-Value="Value" Label="" /> *@
    <InputText T="string" class="form-control" @bind-Value="Value" Label="@Name" placeholder="@Name" />
@*     <CurrencyInput class="form-control" TValue="double"
                   @bind-Value="@_value"
                   HideCurrencySymbol="true"
                   Placeholder="@Name" /> *@

    <label for="floatingInput">@Name</label>
</div>

@code {

    private string _value;

    [Parameter]
    public EventCallback<string> OnChildParameterChanged { get; set; }

    [Parameter]
    public string Value
    {
        get
        {
            return this._value.ToString();
        }
        set
        {
            if (_value == value) return;
            value = formatCurrency(value);
            this._value = value;
            OnChildParameterChanged.InvokeAsync(value);

        } 
    }

    [Parameter] public string Name { get; set; }

    private void HandleError(string errorMessage) {
        Console.WriteLine($"Mask error: {errorMessage}");
    }

    private string formatCurrency(string num)
    {
        num = Util.ExtractNumberFromString(num, Share.Enums.ExcelCellType.Currency);
        Double value;
        if (Double.TryParse(num, out value))
            return String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C2}", value);
        else
            return String.Empty;
    }
}
