@using BlazorAppExcel.Components.atomic
@using BlazorAppExcel.Interfaces
@using BlazorAppExcel.Models
@using Blazored.LocalStorage
@using Newtonsoft.Json

@inject IExcelService excelService
@inject ISessionSingletonService session
@inject ILocalStorageService localStorage

@if (loading)
{
    <div class="spinner-container">
        <ProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
    </div>
}

@foreach (TableExcel table in tables)
{
    <div style="padding-top:20px">

        <Card Table="@table" OnDelete="OnDelete"></Card>
    </div>
}

@code {

    private IList<TableExcel> tables = new List<TableExcel>();

    bool loading = false;
    private async void OnDelete(TableExcel table)
    {
        tables.Remove(table);
        await this.excelService.Delete("user", table.Id);

        this.StateHasChanged();
    }

    private string Url(string url)
    {
        return $"work/tables/{url}";
    }

    protected override async Task OnInitializedAsync()
    {
        loading = true;
       
        var user = await this.excelService.GetUser("user");

        await this.session.SetUser(user);

        tables = this.session.User.TablesToList();
        loading = false;
    }
}
     