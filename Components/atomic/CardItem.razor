@using BlazorAppExcel.Interfaces
@using BlazorAppExcel.Models
@inject NavigationManager NavigationManager;
@inject ISessionSingletonService user;
@inject IExcelService excelService;

<Card>
    <CardBody>
       
        <div class="d-flex justify-content-between">
            <CardTitle>
                @if (!IsTitleEditable)
                {
                    <div onclick="@EnableEditTitle">
                        @Table.Name
                    </div>
                }
                else
                {
                    <InputText @bind-Value="Table.Name" Label="Tab Name" Variant="Variant.Text" OnBlur="DisableEditTitle"></InputText>
                }
            </CardTitle>
            <CardSubTitle Class="mb-2 text-muted">@getDateCreationValue()</CardSubTitle>
        </div>
        
        <CardSubTitle Class="mb-2 text-muted">@getFileNameValue()</CardSubTitle>
        
   
        <CardLink @onclick="Go" To="#">Edit</CardLink>
    </CardBody>
</Card>

@code {

    [Parameter] public TableExcel Table { get; set; }
    [Parameter] public Action<TableExcel> OnDelete { get; set; }
    bool IsTitleEditable = false;

    private ConfirmDialog dialog;

    private async void DisableEditTitle()
    {

        IsTitleEditable = false;

        await this.excelService.SetUser(user.User, Table);
    }

    private void EnableEditTitle()
    {
        IsTitleEditable = !IsTitleEditable;
    }

    private async void Delete()
    {
        // var parameters = new DialogParameters<SimpleDialog>();
        // parameters.Add(x => x.Title, $"Deleting {Table.Name}");

        // var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };

        // var _dialog = await DialogService.ShowAsync<SimpleDialog>("Simple Dialog", parameters, options);
        // var _result = await _dialog.Result;
        // if (Convert.ToBoolean(_result.Data) == true)
        //     OnDelete(Table);

        var options = new ConfirmDialogOptions { Size = DialogSize.Regular };

        var confirmation = await dialog.ShowAsync(
            title: "Simple Confirm Dialog",
            message1: "Do you want to proceed?",
            confirmDialogOptions: options);

        if (confirmation)
        {
            // do whatever
        }
        else
        {
            // do whatever
        }

    }

    public void Go()
    {
        this.user.SetTableActive(Table);

        NavigationManager.NavigateTo($"work/tables/{Table.Name}");
    }

    private string getFileNameValue()
    {
        if (Table.FileName == null)
            return "(value no register)";

        return Table.FileName;
    }

    private string getDateCreationValue()
    {
        if (Table.DateCreation == null)
            return Table.Name;
        return Table.DateCreation.ToLongDateString();
    }
}
